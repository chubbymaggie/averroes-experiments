#! /usr/bin/env bash

set -e

benchmark=$1
base=$2
jre=$3

# declaring some arrays of options
declare -A appregex
appregex["antlr"]='dacapo.antlr.*:antlr.**'
appregex["bloat"]='dacapo.bloat.*:EDU.purdue.cs.bloat.**'
appregex["chart"]='dacapo.chart.*:org.jfree.chart.**:org.jfree.data.**'
appregex["hsqldb"]='dacapo.hsqldb.*:org.hsqldb.**'
appregex["luindex"]='dacapo.luindex.*:org.apache.lucene.**'
appregex["lusearch"]='dacapo.lusearch.*:org.apache.lucene.**'
appregex["pmd"]='dacapo.pmd.*:net.sourceforge.pmd.**'
appregex["xalan"]='dacapo.xalan.*:org.apache.xalan.**:org.apache.xml.dtm.**:org.apache.xml.utils.**:org.apache.xpath.**:org.w3c.dom.xpath.*'
appregex["compress"]='spec.benchmarks._201_compress.*'
appregex["db"]='spec.benchmarks._209_db.*'
appregex["jack"]='spec.benchmarks._228_jack.*'
appregex["javac"]='spec.benchmarks._213_javac.*'
appregex["jess"]='spec.benchmarks._202_jess.**'
appregex["raytrace"]='spec.benchmarks._205_raytrace.*'

declare -A mainclass
mainclass["antlr"]='dacapo.antlr.Main2'
mainclass["bloat"]='dacapo.bloat.Main2'
mainclass["chart"]='dacapo.chart.Main2'
mainclass["hsqldb"]='org.hsqldb.hsqldbDoopDriver'
mainclass["luindex"]='dacapo.luindex.Main2'
mainclass["lusearch"]='dacapo.lusearch.Main2'
mainclass["pmd"]='dacapo.pmd.Main2'
mainclass["xalan"]='dacapo.xalan.Main2'
mainclass["compress"]='spec.benchmarks._201_compress.Main'
mainclass["db"]='spec.benchmarks._209_db.Main'
mainclass["jack"]='spec.benchmarks._228_jack.Main'
mainclass["javac"]='spec.benchmarks._213_javac.Main'
mainclass["jess"]='spec.benchmarks._202_jess.Main'
mainclass["raytrace"]='spec.benchmarks._205_raytrace.Main'

##################################################################
program=$(basename $benchmark)
bench=$(dirname ${benchmark})
outputdir=${base}/callgraphs/${benchmark}
doopHome=/u/karim/workspace/doop
dyn=benchmarks/${bench}/${program}.dyn
##################################################################
  
# 1. make some dirs
mkdir -p ${outputdir}

# 2. run tool
echo "parsing WALA's dynamic call graph report for ${benchmark}"
java -jar conv.jar -h ${doopHome} -b ${base} -p ${program} -r ${appregex[${program}]} -m ${mainclass[${program}]} -d ${dyn} -o ${outputdir} -j ${jre} -t dynamic 

echo ""
